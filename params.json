{"body":"`ConcurrentList<T>` is a thread-safe, lock-free implementation of a data structure implementing the `IList<T>` interface, with the following omissions:\r\n\r\n1. `Remove`\r\n2. `RemoveAt`\r\n2. `Insert`\r\n\r\nThe design of this data structure is described in the following post from the blog The Philosopher Developer:\r\n\r\nhttp://philosopherdeveloper.wordpress.com/2011/02/23/how-to-build-a-thread-safe-lock-free-resizable-array/\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"ConcurrentList","tagline":"A thread-safe, lock-free implementation of the IList<T> interface for .NET"}